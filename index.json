[{"authors":null,"categories":null,"content":"Iâ€™m a passionate roboticist pursuing my PhD studies in Mechanical engineering. My interests include dynamic manipulations, intelligent decision making, and machine learning. Find my latest work here, feel free to contact me for any questions!\n  Download my resumÃ©.\n","date":1549324800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1567641600,"objectID":"a93a02c7d269b21a82211c877f428401","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Iâ€™m a passionate roboticist pursuing my PhD studies in Mechanical engineering. My interests include dynamic manipulations, intelligent decision making, and machine learning. Find my latest work here, feel free to contact me for any questions!","tags":null,"title":"Osher Azulay","type":"authors"},{"authors":null,"categories":null,"content":"   Table of Contents  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor admin FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"5581ad20068553b6eb989d500426360d","permalink":"https://osheraz.github.io/blog-unused/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/blog-unused/example/","section":"blog-unused","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"ðŸ“Š Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"e5ef6bc202b8cc67c96769a1d5d3e9d5","permalink":"https://osheraz.github.io/blog-unused/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/blog-unused/example/python/","section":"blog-unused","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"26cc7d8400d234f80d8bc1588446bc94","permalink":"https://osheraz.github.io/blog-unused/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/blog-unused/example/visualization/","section":"blog-unused","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"350ab1e67a043cec75c14afea352d6cb","permalink":"https://osheraz.github.io/blog-unused/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/blog-unused/example/stats/","section":"blog-unused","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":["Osher Azulay and Amir Shapiro"],"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"74ea0c9671304ea17bb594081571cadb","permalink":"https://osheraz.github.io/publication/ddpg/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/ddpg/","section":"publication","summary":"Robotics may still seem to some like a far-fetched fantasy, but the usage of robots for variety of industry fields, especially in the construction and agricultural domains, yield many advantages, such as economic efficiency, safety and availability. As some tasks are more complex than others, they often require extensive engineering experience and tedious manual tuning beyond the control algorithm itself. Reinforcement learning (RL) is a type of machine learning technique that holds the promise of enabling robots to learn large repertoires of behavioral skills with minimal human intervention using trial and error methods. However, practical real-world applications of reinforcement learning are relatively rare, as they often require unrealistic learning time, high sample complexity, and discrepancies between simulated and real physical system behavior (i.e the reality gap). To create robust deep RL controllers (DRL), that can achieve success in real-life scenarios, some techniques can be used such as learning from both domains and performing further system identification.\nIn the proposed research we presents a deep reinforcement learning-based controller for an unmanned ground vehicle with a custom-built scooping mechanism. The robot's aim is to autonomously perform earth scooping cycles with three degrees of freedom lift, tilt and the robot's velocity. While the majority of previous research to automate scooping processes are based on data recorded by expert operators, we present a method to autonomously control a wheel loader to perform scooping cycle using deep reinforcement learning methods without any user-provided demonstrations. The controllerâ€™s learning approach is based on the actor-critic, Deep Deterministic Policy Gradient algorithm which we use to map online sensor data as input to continuously update actuator commands. The training of the scooping policy network is done solely in a simplified simulation environment using a virtual physics engine, which converged to an average of 65% fill factor from full bucket capacity and 5 sec average cycle time.","tags":[],"title":"Wheel Loader Scooping Controller Using Deep Reinforcement Learning","type":"publication"},{"authors":["admin"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"96dbaee51dcf392c3e91d0de5c005233","permalink":"https://osheraz.github.io/blog-unused/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/blog-unused/jupyter/","section":"blog-unused","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"blog-unused"},{"authors":["Osher Azulay"],"categories":[],"content":"\nWell, i took a really nice course last semester, which was all about autonomous driving. I really liked it because it was a hands-on course, with some of the nicest projects. The course introduced some of the core functions of autonomous driving system, such as localization and mapping, spatial perception and route planning which later on focus on deep learning solutions.\nThroughout the course, i thought it would be great to write a brief description about the projects i have done, for later projects i might do.\nProject #1 TODO: add the code here\nTopics  Mapping and Localization Probabilistic Occupancy Grid Iterative Closet Points (ICP)  Modeling and understanding the environment is a crucial task for autonomous robotics, in particular for mobile robots. Occupancy Grid Mapping refers to a family of computer algorithms in probabilistic robotics for mobile robots. This address the problem of generating maps from noisy and uncertain sensor measurement data, with the assumption that the robot pose is known. The basic idea of the occupancy grid is to represent a map of the environment as an evenly spaced field of binary random variables each representing the presence of an obstacle at that location in the environment. In this project, we experienced with real captured driving data - KITTI Dataset. The data-set contains 6 hours of traffic scenarios at 10â€“100 Hz using a variety of sensor modalities such as high-resolution color and grayscale stereo cameras, a Velodyne 3D laser scanner, and a high-precision GPS/IMU inertial navigation system.\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nThe goal of an occupancy mapping algorithm is to estimate the posterior probability over maps given the data: $p(m\\mid z_{1:t},x_{1:t}) $p(m\\mid z_{{1:t}},x_{{1:t}})$ , where m is the map, $z_{1:t}}z_{{1:t}}$ is the set of measurements from time 1 to t, and $x_{1:t}}x_{{1:t}$ is the set of robot poses from time 1 to t. The controls and odometry data play no part in the occupancy grid mapping algorithm since the path is assumed known.\nTo implement the occupancy map, i used the pykitti python package, which is a light package of minimal set of tools for working the the KITTI dataset. Basically, after passing the path of the recording, it provides each of the sensors data via generators for easy sequential access. This package assumes that you have already downloaded the calibration data associated with the sequences you want to work on, and that the directory structure is unchanged from the original structure laid out in the KITTI zip files.\ndef pykitti_dataset(): # Change this to the directory where you store KITTI data curr_dir_path = os.getcwd() basedir = curr_dir_path + '/kitti_data' # Specify the dataset to load date = '2011_09_26' drive = '0013' # Load the data. dataset = pykitti.raw(basedir, date, drive) return dataset  which lets your access the following:\n# dataset.calib: Calibration data are accessible as a named tuple # dataset.timestamps: Timestamps are parsed into a list of datetime objects # dataset.oxts: List of OXTS packets and 6-dof poses as named tuples # dataset.camN: Returns a generator that loads individual images from camera N # dataset.get_camN(idx): Returns the image from camera N at idx # dataset.gray: Returns a generator that loads monochrome stereo pairs (cam0, cam1) # dataset.get_gray(idx): Returns the monochrome stereo pair at idx # dataset.rgb: Returns a generator that loads RGB stereo pairs (cam2, cam3) # dataset.get_rgb(idx): Returns the RGB stereo pair at idx # dataset.velo: Returns a generator that loads velodyne scans as [x,y,z,reflectance] # dataset.get_velo(idx): Returns the velodyne scan at idx  ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"354b62ed5d4b81e9d1923ad64e193b83","permalink":"https://osheraz.github.io/blog/slam/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/blog/slam/","section":"blog","summary":" ","tags":[],"title":"Mapping, Perception and More","type":"blog"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://osheraz.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]